library(MOWTextClassification)
2+2
metric.euclid(c(1,2,3), c(1,2,3))
load("~/MOWTextClassification/.RData")
library(MOWTextClassification)
library(MOWTextClassification)
load("~/MOWTextClassification/MOWTextClassification.Rproj")
load("~/MOWTextClassification/.Rhistory")
load("~/MOWTextClassification/.RData")
devtools::load_all()
install.packages(devtools)
load("~/.RData")
install.packages("devtools")
2%*%2
abs(-4)
cos.sim=function(ma, mb){
mat=tcrossprod(ma, mb)
t1=sqrt(apply(ma, 1, crossprod))
t2=sqrt(apply(mb, 1, crossprod))
mat / outer(t1,t2)
}
metric.cos()
library(MOWTextClassification)
metric.cos(0)
fit.nb()
devtools::load_all()
metric.cos()
cos.sim(c(1,2,3,4), c(4,3,2,1))
document()
devtools::document()
load(iris)
load("iris")
data("iris")
df = data.frame(iris)
df
iris
cnames(df)
colSums(df)
colnames(df)
colnames(df)[3]
colnames(df)[4]
colnames(df)[5]
colnames(df)[5]="c.Species"
colnames(df)[5]
colnames(df)[0]
colnames(df)[1:4]
colnames(df)[1:5]
colnames(df)[1:4] = "w."+colnames(df)[1:4]
colnames(df)[1:4] = "w." .+ colnames(df)[1:4]
colnames(df)[1:4] = paste("w.", colnames(df)[1:4])
colnames(df)[1:4]
?knn.simple
split.categories(iris)
split.categories(df)
colnames(df)[1:4] = paste("w.", colnames(df)[1:4], sep='')
split.categories(df)
res = knn.simple(df[,1:4], df[,5], df[,1:4], metric.euclid, k=5)
[1:20]
(1:20)
class.error(res, (1:150), df)
t <- table(res, df[,5])
diag(t)
t-diag(t)
sum(table)
sum(table[,])
table[, lapply(.SD, sum, na.rm=TRUE)]
?lapply
table[, lapply(X, sum, na.rm=TRUE)]
table[, Sum := Reduce(`+`, .SD), .SDcols=listCol][]
table[, Reduce(`+`, .SD), .SDcols=listCol][]
?.SD
??.SD
colSums(df)
colSums(table)
table
t
colSums(t)
precs <- colSums(t) - diag(t)
precs
diag(t)/colSums(t)
diag(t)
t
rowsum(t)
rowSums(t)
sum(diag(t))
sum(t)
devtools::load_all()
compute.metrix(t)
count(t)
devtools::load_all()
compute.metrix(t)
install.packages("class")
?knn.simple
?fit.knn
predict.ptmKnn()
?predict.ptmKnn()
library(class)
?naiveBayes
?e1071::naiveBayes
?fit.nb
?naiveBayes
?MOWTextClassification::predict.mcNb
?predict
load('data/articles.bin')
load('data/articles.bin')
load('data/year1990.bin')
v <- split.categories(df, 700, create.hash(c("c.OtherApplicationsNEC", "c.OtherSciencesNEC")))
test <- sample(1:nrow(lst$data), 1000, replace=FALSE) test.data <- lst$data[test,] test.cls <- lst$fact[test] row.names(test.data) <- NULL learn.data <- lst$data[-test,] learn.cls <- lst$fact[-test] row.names(learn.data) <- NULL
test <- sample(1:nrow(lst$data), 1000, replace=FALSE); test.data <- lst$data[test,]; test.cls <- lst$fact; row.names(test.data) <- NULL; learn.data <- lst$data[-test,]; learn.cls <- lst$fact[-test]; row.names(learn.data) <- NULL;
lst <- v
test <- sample(1:nrow(lst$data), 1000, replace=FALSE); test.data <- lst$data[test,]; test.cls <- lst$fact; row.names(test.data) <- NULL; learn.data <- lst$data[-test,]; learn.cls <- lst$fact[-test]; row.names(learn.data) <- NULL;
model <- fit.nb(learn.data, learn.cls)
p <- predict(model, test.data)
table(p, test.cls)
library(MOWTextClassification)
model <- fit.nb(learn.data, learn.cls)
p <- predict(model, test.data)
table(p, test.cls)
p
devtools::document()
devtools::document()
library(MOWTextClassification)
p <- predict(model, test.data)
table(p, test.cls)
model <- fit.nb(learn.data, learn.cls)
p <- predict(model, test.data)
table(p, test.cls)
p2 <- predict(model, test.data )
table(p2, test.cls)
p2
table(p2, as.integer(test.cls))
length(test.cls)
test <- sample(1:nrow(lst$data), 1000, replace=FALSE);
test.data <- lst$data[test,];
test.cls <- lst$fact[test];
row.names(test.data) <- NULL;
learn.data <- lst$data[-test,];
learn.cls <- lst$fact[-test];
row.names(learn.data) <- NULL;
table(p2, test.cls)
model <- fit.nb(learn.data, learn.cls)
p2 <- predict(model, test.data )
table(p2, test.cls)
t=table(p2, test.cls)
compute.metrixes(t)
p2 <- predict(model, test.data )
t=table(p2, test.cls)
compute.metrixes(t)
model <- fit.nb(learn.data, learn.cls)
p2 <- predict(model, test.data)
t=table(p2, test.cls)
compute.metrixes(t)
library(MOWTextClassification)
mbern <- fit.nb.bernoulli(learn.data, learn.cls)
library(MOWTextClassification)
mbern <- fit.nb.bernoulli(learn.data, learn.cls)
p<-predict(mbern, test.data)
p<-predict(mbern, test.data)
p<-predict(mbern, test.data)
table(p, test.cls)
compute.metrixes(table(p, test.cls))
mbern <- fit.nb.multinomial(learn.data, learn.cls)
p3<-predict(mbern, test.cls)
mm <- fit.nb.multinomial(learn.data, learn.cls)
p3 <- predict(mm, test.data)
table(p3, test.cls)
compute.metrixes(table(p3, test.cls))
library(MOWTextClassification)
devtools::document()
devtools::check()
devtools::document()
library(MOWTextClassification)
